%nav.tab-bar.show-for-small
  %section.left-small
    %a.left-off-canvas-toggle.menu-icon
      %span
  %section.middle.tab-bar-section
    %h1.title= t("page_title")
  -if feed
    %section.right-small
      %a.right-off-canvas-toggle.menu-icon
        %span
    
%aside.left-off-canvas-menu
  %ul.off-canvas-list
    %li
      %label Search
    %li
      = form_tag search_path, :method => 'get' do
        .row.collapse
          .small-9.columns
            = text_field_tag :query, params[:query]
          .small-3.columns    
            = submit_tag "Search", :name => nil, class: "button radius postfix"
    %li
      %label Feeds
    %li= link_to t("new_feed"), new_feed_path()
    %li= link_to t("all_feeds"), feeds_path()

    - if user_signed_in?
      %li
        %label= current_user.name
      %li
        = link_to "profile", user_path(current_user.id)
      %li
        = link_to 'Edit account', edit_user_registration_path
      %li
        = link_to 'Logout', destroy_user_session_path, :method=>'delete'
    - else
      %li.has-dropdown.not-click
        %a{href: "#"} Login/Signup
        %ul.dropdown
          %li
            = link_to 'Login', new_user_session_path
          %li
            = link_to 'Sign up', new_user_registration_path
-if feed
  %aside.right-off-canvas-menu
    %ul.off-canvas-list
      %li
        %label= t('codex')
      = render "layouts/codex", feed: @feed
      - if !@evaluated_posts.empty?
        %li
          %label= t("evaluated_posts_list")
          - @evaluated_posts.each do |ep|
            %li
              .evaluated_post_content= ep.content 
              -if ep.evaluations.first.status == "accepted"
                .evaluated_post_status.accepted
                  .row
                    .small-4.columns
                      = t("user_accepted")
                    .small-8.columns
                      .progress.radius.no-bottom-margin.small
                        .meter{:style => "width: " + ((ep.all_evaluated.count.to_f/ep.evaluations.count.to_f)*100).to_i.to_s + "%"}
              -elsif ep.evaluations.first.status == "declined"
                .evaluated_post_status.declined
                  .row
                    .small-4.columns
                      = t("user_declined")
                    .small-8.columns
                      .progress.radius.no-bottom-margin
                        .meter{:style => "width: " + ((ep.all_evaluated.count.to_f/ep.evaluations.count.to_f)*100).to_i.to_s + "%"}
              -elsif ep.evaluations.first.status == "passed"
                .evaluated_post_status.passed
                  .row
                    .small-4.columns
                      = t("user_passed_on")
                    .small-8.columns
                      .progress.radius.no-bottom-margin
                        .meter{:style => "width: " + ((ep.all_evaluated.count.to_f/ep.evaluations.count.to_f)*100).to_i.to_s + "%"}
      - if !@users_posts.empty?
        %li
          %label= t("waiting_posts_list")
        - @users_posts.each do |ep|
          %li
            .waiting_posts= render "post_box", post: ep

%a.exit-off-canvas{href: "#"}